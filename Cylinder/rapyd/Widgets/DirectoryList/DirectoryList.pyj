@external
class Widget:
    pass

@external
class DirectoryListRow:
    pass


define(["Widget","Widgets/DirectoryListRow/DirectoryListRow"], main)

def main(Widget, DirectoryListRow):

    class DirectoryList(Widget):
        def __init__(self, parentWidget, fs):
            Widget.__init__(self, "DirectoryList", parentWidget)

            self.fs = fs
            self.path = None
            self.data = None
            self.columnFields = ["title", "size", "owner", "modified"]
            self.rows = []

            self.UPDATED = "OnUpdate"

            def setup():

                pass

            self.subscribe(self.LOADED_HTML, setup.bind(self))

        def fetchDir(self, path):
            self.fs.fetchDirectory(path, self.onListDir.bind(self))

        def getPath(self):
            return self.path

        def getList(self):
            return self.list

        def onRowDblClick(self, row, ev):
            if row.data.type == "directory":
                self.fetchDir(row.data.path)

        def clear(self):
            self.$element.find(".DirectoryListTable").colResizable({disable: true})

            $head = self.$element.find(".DirectoryListHeaderRow")
            $head.find(".DirectoryListHeaderCell").remove()

            for row in self.rows:
                row.remove()

            # this is possible
            remaining = self.$element.find(".DirectoryListTable").find(".DirectoryListRow")
            for item in remaining:
                id = $(item).attr("WidgetID")
                w = Widget.getWidgetByID(id)
                if w:
                    w.remove()
                else:
                    $(item).remove()


            self.rows = []

        def onListDir(self, path, list):
            self.path = path
            self.list = list
            self.update()

        def addItem(self, item):
            row = DirectoryListRow(self, item)
            row.subscribe(row.DBL_CLICKED, self.onRowDblClick.bind(self) )
            self.rows.push(row)

        def update(self):
            self.clear()
            $head = self.$element.find(".DirectoryListHeaderRow")

            parentDirectory = {}

            for column in self.columnFields:
                $cell = $("<th class='DirectoryListHeaderCell'></th>")
                $cell.text(column)
                $head.append($cell)
                parentDirectory[column] = ""

            parentDirectory.title = ".."
            parentDirectory.type = "directory"
            parentDirectory.path = self.path + "/.."
            self.addItem(parentDirectory)

            for item in self.list:
                self.addItem(item)

            self.$element.find(".DirectoryListTable").colResizable({liveDrag: true, partialRefresh: true, postbackSafe: true, minWidth: 50})

            self.notify(self.UPDATED, self.path)


    return DirectoryList